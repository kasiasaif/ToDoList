{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","lists","setLists","input","setInput","className","value","onChange","event","target","placeholder","onClick","storedTask","push","map","list","index","splice","handleDelete","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAgDeA,EA5CJ,WAEX,MAAsBC,mBAAS,IAA/B,mBAAMC,EAAN,KAAYC,EAAZ,KAEA,EAAuBF,mBAAS,IAAhC,mBAAOG,EAAP,KAAaC,EAAb,KAcE,OACE,gCACA,2CACA,sBAAKC,UAAU,MAAf,UAEE,sBAAKA,UAAU,QAAf,UACA,uBAAQC,MAAOH,EAAOI,SAAU,SAACC,GAAD,OAASJ,EAASI,EAAMC,OAAOH,QAAQI,YAAY,mBACnF,wBAAQC,QAnBK,WACjB,IAAIC,EAAW,YAAIX,GACnBW,EAAWC,KAAKV,GAChBD,EAASU,GACTR,EAAS,KAe2BC,UAAU,MAA1C,yBACCJ,EAAMa,KAAI,SAACC,EAAKC,GACrB,OACA,sBAAKX,UAAW,OAAhB,UACA,qBAAKA,UAAW,SAAhB,SAA0BU,IAC1B,wBAASV,UAAW,SAASM,QAAS,kBAjBnB,SAACK,GAClB,IAAIJ,EAAW,YAAIX,GACnBW,EAAWK,OAAOD,EAAM,GACxBd,EAASU,GAcgCM,CAAaF,IAAxD,sBAF4BA,aCpBfG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3806601f.chunk.js","sourcesContent":["import React, {  useState } from 'react';\nimport './App.css';\n\n\nconst App =()=>{\n\nconst[lists,setLists]=useState([])\n\nconst [input,setInput]=useState('');\n\nconst handleSubmit=()=>{\n  let storedTask=[...lists];\n  storedTask.push(input)\n  setLists(storedTask)\n  setInput('')\n}\n  \n  const handleDelete=(index)=>{\n    let storedTask=[...lists]\n    storedTask.splice(index,1)\n    setLists(storedTask)\n  }\n  return(\n    <div>\n    <h1>TODO List</h1>\n    <div className=\"App\">\n      \n      <div className=\"input\">\n      <input  value={input} onChange={(event)=>setInput(event.target.value)} placeholder=\"Enter new task\"/>\n      <button onClick ={handleSubmit} className=\"add\">ADD TASK</button></div>\n      {lists.map((list,index)=>{\n  return(\n  <div className= \"list\" key={index}>\n  <div className= \"delete\">{list}</div>\n  <button  className= \"delete\" onClick={()=> handleDelete(index)}>DELETE</button>\n  </div>\n  )\n    }\n  )\n}\n    </div> \n    </div>\n  \n  )\n}\n\n  \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}